version: '3'

services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    env_file: .env
    container_name: api
    healthcheck:
      test: ['CMD-SHELL', 'curl', '--fail', 'http://api:5001/health-check']
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    ports:
      - '${PORT}:5001'
    depends_on:
      - db
      - redis

  redis:
    image: bitnami/redis@sha256:76d250e94bd9d9315a807e8a45adc48091927802d54110187cbaee98a59bc4f1
    env_file: .env
    container_name: redis
    restart: unless-stopped
    ports:
      - '${REDIS_PORT}:6379'
    volumes:
      - 'redis_data:/bitnami/redis/data'

  db:
    image: postgres:14-alpine
    env_file: .env
    container_name: db
    restart: unless-stopped
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - '${DB_PORT}:5432'
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata

  worker:
    build:
      context: .
      dockerfile: Dockerfile
    env_file: .env
    container_name: worker
    restart: unless-stopped
    depends_on:
      - db
      - redis
    command: ['/bin/bash', '-c', 'node ./dist/worker.js']

  meilisearch:
    image: getmeili/meilisearch:latest
    env_file: .env
    container_name: meilisearch
    restart: unless-stopped
    ports:
      - '7700:7700'
    volumes:
      - 'meili_data:/meili_data'

volumes:
  pgdata:
  redis_data:
  meili_data:
